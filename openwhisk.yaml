# Task to pull OpenWhisk Runtime and update the runtime Dockerfile with an application source
#
# Inputs:
#   * app-git: GitHub Repo with an application source
#   * runtime-git: GitHub Repo with an OpenWhisk Runtime
#   * DOCKERFILE
#   * OW_RUNTIME_DEBUG
#   * OW_RUNTIME_PLATFORM
#   * OW_ACTION_NAME
#   * OW_ACTION_MAIN
#   * OW_ACTION_BINARY
#   * OW_HTTP_METHODS
#   * OW_ACTION_RAW
# Outputs:
#   * app-image: An image with OpenWhisk Runtime and application source which is ready to be served on Knative
#
apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: openwhisk
spec:
  inputs:
    resources:
      - name: app-git
        type: git
      - name: runtime-git
        type: git
    params:
      - name: DOCKERFILE
        description: The path to the dockerfile to build from Runtime Repo
      - name: OW_RUNTIME_DEBUG
        description: flag to indicate debug mode should be on/off
        default: "false"
      - name: OW_RUNTIME_PLATFORM
        description: flag to indicate the platform, one of ["openwhisk", "knative", ... ]
        default: "knative"
      - name: OW_ACTION_NAME
        description: name of the action
        default: ""
      - name: OW_ACTION_CODE
        description: JavaScript source code to be evaluated
        default: ""
      - name: OW_ACTION_MAIN
        description: name of the function in the "__OW_ACTION_CODE" to call as the action handler
        default: "main"
      - name: OW_ACTION_BINARY
        description: flag to indicate zip function, for zip actions, "__OW_ACTION_CODE" must be base64 encoded string
        default: "false"
      - name: OW_HTTP_METHODS
        description: list of HTTP methods, any combination of [GET, POST, PUT, and DELETE], default is [POST]
        default: "[POST]"
      - name: OW_ACTION_RAW
        description: flag to indicate raw HTTP handling, interpret and process an incoming HTTP body directly
        default: "false"
      - name: OW_APP_PATH
        default: ""
      - name: OW_ACTION_ARCHIVE_NAME
        default: "action.zip"
  outputs:
    resources:
      - name: app-image
        type: image
  steps:
    - name: add-ow-env-to-dockerfile
      image: ubuntu
      command:
        - bash
      args:
        - -c
        - |
          cd $(inputs.params.OW_APP_PATH)
          pwd
          ARCHIVE=$(inputs.params.OW_ACTION_ARCHIVE_NAME)
          echo $ARCHIVE
          base64 $ARCHIVE | tr -d '[:space:]'
          OW_ACTION_CODE=`base64 $ARCHIVE | tr -d '[:space:]'`
          echo $OW_ACTION_CODE
          cd /workspace/
          cat <<EOF >> $(inputs.params.DOCKERFILE)
            ENV __OW_RUNTIME_DEBUG "$(inputs.params.OW_RUNTIME_DEBUG)"
            ENV __OW_RUNTIME_PLATFORM "$(inputs.params.OW_RUNTIME_PLATFORM)"
            ENV __OW_ACTION_NAME "$(inputs.params.OW_ACTION_NAME)"
            ENV __OW_ACTION_CODE "$OW_ACTION_CODE"
            ENV __OW_ACTION_MAIN "$(inputs.params.OW_ACTION_MAIN)"
            ENV __OW_ACTION_BINARY "$(inputs.params.OW_ACTION_BINARY)"
            ENV __OW_HTTP_METHODS "$(inputs.params.OW_HTTP_METHODS)"
            ENV __OW_ACTION_RAW "$(inputs.params.OW_ACTION_RAW)"
          EOF
          echo "Done updating Dockerfile"
    - name: update-dockerfile-for-tekton
      image: ubuntu
      command:
        - sed
      args:
        - -i
        - -e
        - 's/COPY ./COPY .\/runtime-git/g'
        - $(inputs.params.DOCKERFILE)
    - name: build-openwhisk-app-image
      image: "gcr.io/kaniko-project/executor:latest"
      command:
        - /kaniko/executor
      args:
        - --dockerfile=$(inputs.params.DOCKERFILE)
        - --destination=$(outputs.resources.app-image.url)
