# Git Pipeline Resource representing an application source on GitHub
apiVersion: tekton.dev/v1alpha1
kind: PipelineResource
metadata:
  name: app-git
spec:
  type: git
  params:
  - name: revision
    value: master
  - name: url
    value: https://github.com/apache/openwhisk-test.git
---

apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: task-install-tools
spec:
  inputs:
    resources:
    - name: git-repo
      type: git
    params:
    - name: NODE_VERSION
      default: "node"
    - name: APP_DIR
      default: ""
  outputs:
    resources:
    - name: git-repo
      type: git
  steps:
  - name: install-node-packages
    image: $(inputs.params.NODE_VERSION)
    command:
    - bash
    args:
    - -c
    - |
      cd $(inputs.params.APP_DIR)
      echo "Starting to install Node Packages under $(inputs.params.APP_DIR)"
      npm install --production --loglevel=error
      if [ $? = 0 ]; then
        echo "Successfully finished installing Node Packages under $(inputs.params.APP_DIR)"
      else
        echo "Failed to install Node Packages under $(inputs.params.APP_DIR)"
      fi
---

apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: task-build-archive
spec:
  inputs:
    resources:
    - name: git-repo
      type: git
    params:
    - name: NODE_VERSION
      default: "node"
    - name: APP_DIR
      default: ""
    - name: ARCHIVE_UTILITY
      default: "zip"
    - name: ACTION_ARCHIVE_NAME
      default: "action.zip"
  steps:
  - name: build-action-archive
    image: $(inputs.params.NODE_VERSION)
    command:
    - bash
    args:
    - -c
    - |
      apt-get update && apt-get install $(inputs.params.ARCHIVE_UTILITY)
      cd $(inputs.params.APP_DIR) && $(inputs.params.ARCHIVE_UTILITY) $(inputs.params.ACTION_ARCHIVE_NAME) -r *
      if [ $? = 0 ]; then
        echo "Successfully built and created $(inputs.params.ACTION_ARCHIVE_NAME) under $(inputs.params.APP_DIR)"
      else
        echo "Failed to build and archive action source into $(inputs.params.ACTION_ARCHIVE_NAME) under $(inputs.params.APP_DIR)"
      fi
      #        base64 $(inputs.params.ACTION_ARCHIVE_NAME) | tr -d '[:space:]'
---

# Pipeline

apiVersion: tekton.dev/v1alpha1
kind: Pipeline
metadata:
  name: build-openwhisk-app
spec:
  params:
  - name: APP_DIR
    type: string
  resources:
  - name: app-git-repo
    type: git
  tasks:
  - name: install-tools
    taskRef:
      name: task-install-tools
    params:
    - name: APP_DIR
      value: $(params.APP_DIR)
    resources:
      inputs:
      - name: git-repo
        resource: app-git-repo
      outputs:
      - name: git-repo
        resource: app-git-repo
  - name: build-archive
    taskRef:
      name: task-build-archive
    params:
    - name: APP_DIR
      value: $(params.APP_DIR)
    resources:
      inputs:
      - name: git-repo
        resource: app-git-repo

---

apiVersion: tekton.dev/v1alpha1
kind: PipelineRun
metadata:
  name: run-build-openwhisk-app
spec:
  pipelineRef:
    name: build-openwhisk-app
  params:
  - name: APP_DIR
    value: "/workspace/git-repo/packages/left-pad/"
  resources:
  - name: app-git-repo
    resourceRef:
      name: app-git
    
---

## Task Run to Clone a GitHub repo and install npm
#apiVersion: tekton.dev/v1alpha1
#kind: TaskRun
#metadata:
#    name: taskrun-clone-source
#spec:
#    inputs:
#        resources:
#            - name: git-repo
#              resourceRef:
#                name: app-git
#        params:
#            - name: APP_DIR
#              value: "/workspace/git-repo/packages/left-pad/"
#    taskRef:
#        name: task-clone-source
#
#---
